#!/usr/bin/env ruby

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'
  gem 'ruby-trello'
  gem 'dotenv'
  gem 'google-api-client'
  gem 'googleauth'
  gem 'launchy'
end

require 'dotenv/load'
require 'trello'
require 'googleauth'
require 'googleauth/stores/file_token_store'
require "google/apis/sheets_v4"

def authenticate_with_trello
  puts "Press enter to open the Trello authorization page. Be sure to copy the token!"
  gets

  Trello.open_authorization_url(
    key: ENV['TRELLO_API_KEY'],
    name: 'Velocity Tracker',
    scope: 'read',
  )

  print "Enter Trello token: "
  member_token = gets.strip

  Trello.configure do |config|
    config.developer_public_key = ENV['TRELLO_API_KEY']
    config.member_token = member_token
  end
end

def lists
  @lists ||= Trello::Board.find(ENV['TRELLO_BOARD_ID']).lists
end

def find_list(name)
  list_names = {
    done: /^Done:/i,
    todo: /^To\s*Do/i,
    doing: /^Doing/i,
    ready: /^Ready for Acceptance/i,
    accepted: /^Accepted/i,
    epics: /^Epics/i,
  }

  lists.detect do |list|
    list.name =~ list_names[name]
  end
end

POINTS_REGEX = /\((?<points>\d+)\)/

def points(list_name)
  list = find_list(list_name)
  list.cards.reduce(0) do |sum, card|
    if matches = POINTS_REGEX.match(card.name)
      sum + matches[:points].to_i
    else
      sum
    end
  end
end

def points_done
  points(:done)
end

def points_carryover
  points(:todo) + points(:doing) + points(:ready) + points(:accepted)
end

# GOOGLE SHIT
OOB_URI = 'urn:ietf:wg:oauth:2.0:oob'

def authenticate_with_google
  user_id = 'default'
  scope = Google::Apis::SheetsV4::AUTH_SPREADSHEETS
  client_id = Google::Auth::ClientId.from_file(ENV['GOOGLE_CREDENTIALS_PATH'])
  token_store = Google::Auth::Stores::FileTokenStore.new(
    :file => ENV['GOOGLE_TOKEN_STORE_PATH'])
  authorizer = Google::Auth::UserAuthorizer.new(client_id, scope, token_store)

  credentials = authorizer.get_credentials(user_id)
  if credentials.nil?
    url = authorizer.get_authorization_url(base_url: OOB_URI )
    puts "Press enter to open the Google authorization page. Be sure to copy the token!"
    gets
    Launchy.open(url.to_s)
    print "Enter Google token: "
    code = gets.strip
    credentials = authorizer.get_and_store_credentials_from_code(
      user_id: user_id, code: code, base_url: OOB_URI)
  end

  credentials
end

def sheets_service
  @service ||= begin
    service = Google::Apis::SheetsV4::SheetsService.new
    service.client_options.application_name = "Velocity Tracker"
    service.authorization = authenticate_with_google
    service
  end
end

def update_spreadsheet
  range = "B2:B50"
  spreadsheet_id = ENV['GOOGLE_SPREADSHEET_ID']
  response = sheets_service.get_spreadsheet_values spreadsheet_id, range
  sprint_start_dates = response.values.flatten.map do |value|
    Date.parse value
  end
  today = Date.today
  current_sprint_start = sprint_start_dates.detect do |start_date|
    sprint_range = start_date..start_date.next_day(13)
    sprint_range.cover?(today)
  end

  # If today is the start of a print, we are probably trying to update the LAST sprint
  sprint_row = if current_sprint_start == today
    sprint_start_dates.index(current_sprint_start) + 1
  else
    sprint_start_dates.index(current_sprint_start) + 2
  end

  values_range = Google::Apis::SheetsV4::ValueRange.new(values: [[points_done, points_carryover]])
  response = sheets_service.update_spreadsheet_value(
    spreadsheet_id, "H#{sprint_row}:I#{sprint_row}", values_range, value_input_option: 'USER_ENTERED'
  )
end

authenticate_with_trello

update_spreadsheet
